{"version":3,"sources":["../src/rubric.js"],"names":["init","root","domElement","document","getElementById","registerActionListeners","displayChangesBasedOnData","levelElements","querySelectorAll","forEach","element","querySelector","checked","classList","add","addEventListener","e","button","target","closest","levelClick","defaultPrevented","parent","children","child","radio","isEqualNode","setAttribute","remove","removeAttribute","event"],"mappings":"+IAwBoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAU,CAC1B,GAAMC,CAAAA,CAAU,CAAGC,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,CAAnB,CACAI,CAAuB,CAACH,CAAD,CAAvB,CACAI,CAAyB,CAACJ,CAAD,CAC5B,C,IACKI,CAAAA,CAAyB,CAAG,SAACJ,CAAD,CAAgB,CAC9C,GAAMK,CAAAA,CAAa,CAAGL,CAAU,CAACM,gBAAX,CAA4B,QAA5B,CAAtB,CACAD,CAAa,CAACE,OAAd,CAAsB,SAACC,CAAD,CAAa,CAC/B,GAAIA,CAAO,CAACC,aAAR,CAAsB,mBAAtB,EAA2CC,OAA/C,CAAwD,CACpDF,CAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB,CACH,CACJ,CAJD,CAKH,C,CAEKT,CAAuB,CAAG,SAACH,CAAD,CAAgB,CAC5CA,CAAU,CAACa,gBAAX,CAA4B,OAA5B,CAAqC,SAACC,CAAD,CAAO,CACxC,GAAMC,CAAAA,CAAM,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,QAAjB,CAAf,CACA,GAAIF,CAAJ,CAAY,CACRG,CAAU,CAACH,CAAD,CACb,CACJ,CALD,EAMAf,CAAU,CAACa,gBAAX,CAA4B,SAA5B,CAAuC,SAACC,CAAD,CAAO,CAC1C,GAAIA,CAAC,CAACK,gBAAN,CAAwB,CAEvB,CAUJ,CAbD,CAcH,C,CAEKD,CAAU,CAAG,SAACV,CAAD,CAAa,IAGtBY,CAAAA,CAAM,CAAGZ,CAAO,CAACS,OAAR,CAAgB,mBAAhB,CAHa,CAItBI,CAAQ,CAAGD,CAAM,CAACd,gBAAP,CAAwB,QAAxB,CAJW,CAK5Be,CAAQ,CAACd,OAAT,CAAiB,SAACe,CAAD,CAAW,CACxB,GAAMC,CAAAA,CAAK,CAAGD,CAAK,CAACb,aAAN,CAAoB,mBAApB,CAAd,CACA,GAAIa,CAAK,CAACE,WAAN,CAAkBhB,CAAlB,CAAJ,CAAgC,CAC5Bc,CAAK,CAACX,SAAN,CAAgBC,GAAhB,CAAoB,SAApB,EACAU,CAAK,CAACG,YAAN,CAAmB,cAAnB,CAAmC,MAAnC,EACAF,CAAK,CAACE,YAAN,CAAmB,SAAnB,CAA8B,MAA9B,CACH,CAJD,IAIO,CACHH,CAAK,CAACX,SAAN,CAAgBe,MAAhB,CAAuB,SAAvB,EACAJ,CAAK,CAACG,YAAN,CAAmB,cAAnB,CAAmC,OAAnC,EACAF,CAAK,CAACI,eAAN,CAAsB,SAAtB,CACH,CACJ,CAXD,EAYA,MAAOC,CAAAA,KACV,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     gradingform_rubric/rubric\n * @package    core_grades\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = (root) => {\n    const domElement = document.getElementById(root);\n    registerActionListeners(domElement);\n    displayChangesBasedOnData(domElement);\n};\nconst displayChangesBasedOnData = (domElement) => {\n    const levelElements = domElement.querySelectorAll('.level');\n    levelElements.forEach((element) => {\n        if (element.querySelector('input[type=radio]').checked) {\n            element.classList.add(\"checked\");\n        }\n    });\n};\n\nconst registerActionListeners = (domElement) => {\n    domElement.addEventListener('click', (e) => {\n        const button = e.target.closest('.level');\n        if (button) {\n            levelClick(button);\n        }\n    });\n    domElement.addEventListener('keydown', (e) => {\n        if (e.defaultPrevented) {\n            return;\n        }\n        // TODO\n        /*if (level) {\n            const button = e.target.closest(level);\n            // Use key_codes module here?\n            var key = event.key || event.keyCode;\n            if (key === 'Enter' || key === 'enter' || key === 13) {\n                levelClick(button);\n            }\n        }*/\n    });\n};\n\nconst levelClick = (element) => {\n    //event.classList.contains('level');\n\n    const parent = element.closest('.criterion-levels');\n    const children = parent.querySelectorAll('.level');\n    children.forEach((child) => {\n        const radio = child.querySelector('input[type=radio]');\n        if (child.isEqualNode(element)) {\n            child.classList.add('checked');\n            child.setAttribute('aria-checked', 'true');\n            radio.setAttribute('checked', 'true');\n        } else {\n            child.classList.remove('checked');\n            child.setAttribute('aria-checked', 'false');\n            radio.removeAttribute(\"checked\");\n        }\n    });\n    return event;\n};\n"],"file":"rubric.min.js"}