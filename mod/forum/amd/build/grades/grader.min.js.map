{"version":3,"sources":["../../src/grades/grader.js"],"names":["templateNames","contentRegion","getWholeForumFunctions","cmid","groupID","getPostContextFunction","userid","Repository","getDiscussionByUserID","getContentForUserId","getContentForUserIdFunction","postContextFunction","then","context","discussions","map","discussionPostMapper","Templates","render","catch","Notification","exception","getUsers","getUsersForCmidFunction","CourseRepository","getUsersFromCourseModuleID","users","findGradableNode","node","closest","Selectors","gradableItem","discussion","parentMap","Map","posts","parentposts","forEach","post","set","id","userPosts","userposts","subject","readonly","starter","parentid","parent","get","name","launchWholeForumGrading","rootNode","data","dataset","wholeForumFunctions","group","Grader","getGradingPanelFunctions","contextid","gradingComponent","gradingComponentSubtype","gradableItemtype","gradingPanelFunctions","launch","getter","setter","initialUserId","initialuserid","moduleName","launchViewGrading","view","registerLaunchListeners","document","addEventListener","e","target","matches","Error","gradableItems","wholeForum","preventDefault","viewGrade"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/grades/grader\n * @package    mod_forum\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as Selectors from './grader/selectors';\nimport Repository from 'mod_forum/repository';\nimport Templates from 'core/templates';\nimport * as Grader from '../local/grades/grader';\nimport Notification from 'core/notification';\nimport CourseRepository from 'core_course/repository';\n\nconst templateNames = {\n    contentRegion: 'mod_forum/grades/grader/discussion/posts',\n};\n\nconst getWholeForumFunctions = (cmid, groupID) => {\n    const getPostContextFunction = () => {\n        return (userid) => {\n            return Repository.getDiscussionByUserID(userid, cmid);\n        };\n    };\n\n    const getContentForUserIdFunction = () => {\n        const postContextFunction = getPostContextFunction(cmid);\n        return userid => {\n            return postContextFunction(userid)\n            .then(context => {\n                // Rebuild the returned data for the template.\n                context.discussions = context.discussions.map(discussionPostMapper);\n\n                return Templates.render(templateNames.contentRegion, context);\n            })\n            .catch(Notification.exception);\n        };\n    };\n\n    const getUsersForCmidFunction = () => {\n        return () => {\n            return CourseRepository.getUsersFromCourseModuleID(cmid, groupID)\n                .then((context) => {\n                    return context.users;\n                })\n                .catch(Notification.exception);\n        };\n    };\n\n    return {\n        getContentForUserId: getContentForUserIdFunction(),\n        getUsers: getUsersForCmidFunction(),\n    };\n};\n\nconst findGradableNode = (node) => {\n    return node.closest(Selectors.gradableItem);\n};\n\nconst discussionPostMapper = discussion => {\n    // Map postid => post.\n    const parentMap = new Map();\n    discussion.posts.parentposts.forEach(post => parentMap.set(post.id, post));\n    const userPosts = discussion.posts.userposts.map(post => {\n        post.subject = null;\n        post.readonly = true;\n        post.starter = !post.parentid;\n        post.parent = parentMap.get(post.parentid);\n\n        return post;\n    });\n\n    return {\n        id: discussion.id,\n        name: discussion.name,\n        posts: userPosts,\n    };\n};\n\n/**\n * Launch the Grader.\n *\n * @param {HTMLElement} rootNode the root HTML element describing what is to be graded\n */\nconst launchWholeForumGrading = async rootNode => {\n    const data = rootNode.dataset;\n    const wholeForumFunctions = getWholeForumFunctions(data.cmid, data.group);\n    const gradingPanelFunctions = await Grader.getGradingPanelFunctions(\n        'mod_forum',\n        data.contextid,\n        data.gradingComponent,\n        data.gradingComponentSubtype,\n        data.gradableItemtype\n    );\n\n    await Grader.launch(\n        wholeForumFunctions.getUsers,\n        wholeForumFunctions.getContentForUserId,\n        gradingPanelFunctions.getter,\n        gradingPanelFunctions.setter,\n        {\n            initialUserId: data.initialuserid,\n            moduleName: data.name\n        }\n    );\n};\n\n/**\n * Launch the Grader.\n *\n * @param {HTMLElement} rootNode the root HTML element describing what is to be graded\n */\nconst launchViewGrading = async rootNode => {\n    const data = rootNode.dataset;\n    const gradingPanelFunctions = await Grader.getGradingPanelFunctions(\n        'mod_forum',\n        data.contextid,\n        data.gradingComponent,\n        data.gradingComponentSubtype,\n        data.gradableItemtype\n    );\n\n    await Grader.view(\n        gradingPanelFunctions.getter,\n        data.userid\n    );\n};\n\n/**\n * Register listeners to launch the grading panel.\n */\nexport const registerLaunchListeners = () => {\n    document.addEventListener('click', async e => {\n        if (e.target.matches(Selectors.launch)) {\n            const rootNode = findGradableNode(e.target);\n\n            if (!rootNode) {\n                throw Error('Unable to find a gradable item');\n            }\n\n            if (rootNode.matches(Selectors.gradableItems.wholeForum)) {\n                // Note: The preventDefault must be before any async function calls because the function becomes async\n                // at that point and the default action is implemented.\n                e.preventDefault();\n                try {\n                    await launchWholeForumGrading(rootNode);\n                } catch (error) {\n                    Notification.exception(error);\n                }\n            } else {\n                throw Error('Unable to find a valid gradable item');\n            }\n        }\n        if (e.target.matches(Selectors.viewGrade)) {\n            e.preventDefault();\n            const rootNode = findGradableNode(e.target);\n\n            if (!rootNode) {\n                throw Error('Unable to find a gradable item');\n            }\n\n            if (rootNode.matches(Selectors.gradableItems.wholeForum)) {\n                // Note: The preventDefault must be before any async function calls because the function becomes async\n                // at that point and the default action is implemented.\n                e.preventDefault();\n                try {\n                    await launchViewGrading(rootNode);\n                } catch (error) {\n                    Notification.exception(error);\n                }\n            } else {\n                throw Error('Unable to find a valid gradable item');\n            }\n        }\n    });\n};\n"],"file":"grader.min.js"}