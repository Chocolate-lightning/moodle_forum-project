{"version":3,"sources":["../../../src/local/grades/grader.js"],"names":["templateNames","grader","app","registerEventListeners","graderLayout","graderContainer","getContainer","addEventListener","e","target","matches","Selectors","buttons","toggleFullscreen","stopImmediatePropagation","preventDefault","closeGrader","close","launch","getListOfUsers","initialUserIndex","Promise","all","fullscreen","showLoader","Templates","render","graderHTML","replaceNodeContents"],"mappings":"mQAuBA,OAEA,OACA,kU,8xBAGMA,CAAAA,CAAa,CAAG,CAClBC,MAAM,CAAE,CACJC,GAAG,CAAE,+BADD,CADU,C,CAgBhBC,CAAsB,CAAG,SAACC,CAAD,CAAkB,CAC7C,GAAMC,CAAAA,CAAe,CAAGD,CAAY,CAACE,YAAb,EAAxB,CACAD,CAAe,CAACE,gBAAhB,CAAiC,OAAjC,CAA0C,SAACC,CAAD,CAAO,CAC7C,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,UAAUC,OAAV,CAAkBC,gBAAnC,CAAJ,CAA0D,CAEtDL,CAAC,CAACM,wBAAF,GACAN,CAAC,CAACO,cAAF,GAEAX,CAAY,CAACS,gBAAb,EACH,CAND,IAMO,IAAIL,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,UAAUC,OAAV,CAAkBI,WAAnC,CAAJ,CAAqD,CAExDR,CAAC,CAACM,wBAAF,GACAN,CAAC,CAACO,cAAF,GAEAX,CAAY,CAACa,KAAb,EACH,CACJ,CAdD,CAeH,C,CAGYC,CAAM,4CAAG,WAAMC,CAAN,oJAElB,EAFkB,KAClBC,gBADkB,CAClBA,CADkB,YACC,CADD,kBAQRC,CAAAA,OAAO,CAACC,GAAR,CAAY,CAClB,mBAAuB,CAACC,UAAU,GAAX,CAAoBC,UAAU,GAA9B,CAAvB,CADkB,CAElBC,UAAUC,MAAV,CAAiB1B,CAAa,CAACC,MAAd,CAAqBC,GAAtC,CAA2C,EAA3C,CAFkB,CAGlBiB,CAAc,EAHI,CAAZ,CARQ,0BAKdf,CALc,MAMduB,CANc,WAaZtB,CAbY,CAaMD,CAAY,CAACE,YAAb,EAbN,CAelBmB,UAAUG,mBAAV,CAA8BvB,CAA9B,CAA+CsB,CAA/C,CAA2D,EAA3D,EACAxB,CAAsB,CAACC,CAAD,CAAtB,CAhBkB,yCAAH,uD","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     core_grades/unified_grader\n * @package    core_grades\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\n// TODO import Notification from 'core/notification';\nimport Selectors from './local/grader/selectors';\nimport * as UserPaginator from './local/grader/user_picker';\nimport {createLayout as createFullScreenWindow} from 'mod_forum/local/layout/fullscreen';\n\nconst templateNames = {\n    grader: {\n        app: 'mod_forum/local/grades/grader',\n    },\n};\n\nconst displayUsers = (html) => { // eslint-disable-line\n    return Templates.replaceNode(Selectors.regions.gradingReplace, html);\n};\n\nconst renderUserPicker = (state) => { // eslint-disable-line\n    const userNames = state.map(user => ({firstname: user.firstname, lastname: user.lastname, userid: user.id}));\n    const picker = UserPaginator.buildPicker(userNames, 0);\n    return picker;\n\n};\nconst registerEventListeners = (graderLayout) => {\n    const graderContainer = graderLayout.getContainer();\n    graderContainer.addEventListener('click', (e) => {\n        if (e.target.matches(Selectors.buttons.toggleFullscreen)) {\n            // TODO the user should not listen to button clicks specifically.\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.toggleFullscreen();\n        } else if (e.target.matches(Selectors.buttons.closeGrader)) {\n            // TODO the user should not listen to button clicks specifically.\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.close();\n        }\n    });\n};\n\n// Make this explicit rather than object\nexport const launch = async(getListOfUsers, getContentForUser, { // eslint-disable-line\n    initialUserIndex = 0, // eslint-disable-line\n} = {}) => {\n\n    const [\n        graderLayout,\n        graderHTML,\n        userList, // eslint-disable-line\n    ] = await Promise.all([\n        createFullScreenWindow({fullscreen: false, showLoader: false}),\n        Templates.render(templateNames.grader.app, {}),\n        getListOfUsers(),\n    ]);\n    const graderContainer = graderLayout.getContainer();\n\n    Templates.replaceNodeContents(graderContainer, graderHTML, '');\n    registerEventListeners(graderLayout);\n    /*return\n        .then(() => {\n            // Set user picker\n            graderContainer.querySelector(Selectors.regions.moduleReplace);\n            return;\n        })\n        .then(() => {\n            getListOfUsers();\n                /!*.then(state => {\n                    /!*renderUserPicker(state.users)\n                        .then((picker) => {\n                            displayUsers(picker);\n                        });*!/\n                })\n                .catch();*!/\n        })\n        .catch();*/\n};\n"],"file":"grader.min.js"}