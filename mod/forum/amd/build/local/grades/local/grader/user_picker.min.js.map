{"version":3,"sources":["../../../../../src/local/grades/local/grader/user_picker.js"],"names":["UserPicker","userList","showUserCallback","preChangeUserCallback","currentUserIndex","render","bind","setUserId","userId","userIndex","findIndex","user","id","parseInt","Error","root","document","createElement","renderNavigator","html","js","Templates","replaceNodeContents","showUser","currentUser","renderSearch","searchResultListener","registerEventListeners","renderForPromise","context","Promise","all","renderUserChange","hasGrade","userRegion","querySelector","Selectors","regions","appendNodeContents","addEventListener","e","button","target","closest","actions","changeUser","input","searchUserInput","result","failed","updateIndex","dataset","direction","onKeyUp","timeout","onkeyup","clearTimeout","setTimeout","userInput","value","results","filter","fullname","toLowerCase","includes","searchUserBox","preventDefault","selectUser","foundUser","item","userid","trimmedUsers","slice","overflowUsers","builtResults","length","searchUserRegion","replaceNode","specificIndex","total","displayIndex","users","initialUserId","userPicker"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/local/grades/local/grader/user_picker\n * @package    mod_forum\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Selectors from './user_picker/selectors';\n\nconst templatePath = 'mod_forum/local/grades/local/grader';\n\nclass UserPicker {\n\n    /**\n     * Constructor for the User Picker.\n     *\n     * @param {Array} userList List of users\n     * @param {Function} showUserCallback The callback used to display the user\n     * @param {Function} preChangeUserCallback The callback to use before changing user\n     */\n    constructor(userList, showUserCallback, preChangeUserCallback) {\n        this.userList = userList;\n        this.showUserCallback = showUserCallback;\n        this.preChangeUserCallback = preChangeUserCallback;\n        this.currentUserIndex = 0;\n\n        // Ensure that render is bound correctly.\n        this.render = this.render.bind(this);\n        this.setUserId = this.setUserId.bind(this);\n    }\n\n    /**\n     * Set the current userid without rendering the change.\n     * To show the user, call showUser too.\n     *\n     * @param {Number} userId\n     */\n    setUserId(userId) {\n        // Determine the current index based on the user ID.\n        const userIndex = this.userList.findIndex(user => {\n            return user.id === parseInt(userId);\n        });\n\n        if (userIndex === -1) {\n            throw Error(`User with id ${userId} not found`);\n        }\n\n        this.currentUserIndex = userIndex;\n    }\n\n    /**\n     * Render the user picker.\n     */\n    async render() {\n        // Create the root node.\n        this.root = document.createElement('div');\n\n        const {html, js} = await this.renderNavigator();\n        Templates.replaceNodeContents(this.root, html, js);\n\n        // Call the showUser function to show the first user immediately.\n        await this.showUser(this.currentUser);\n\n        // Show a list of users under the user search box.\n        await this.renderSearch(this.userList);\n\n        this.searchResultListener();\n        // Ensure that the event listeners are all bound.\n        this.registerEventListeners();\n    }\n\n    /**\n     * Render the navigator itself.\n     *\n     * @returns {Promise}\n     */\n    renderNavigator() {\n        return Templates.renderForPromise(`${templatePath}/user_picker`, {});\n    }\n\n    /**\n     * Render the current user details for the picker.\n     *\n     * @param {Object} context The data used to render the user picker.\n     * @returns {Promise}\n     */\n    renderUserChange(context) {\n        return Templates.renderForPromise(`${templatePath}/user_picker/user`, context);\n    }\n\n    /**\n     * Show the specified user in the picker.\n     *\n     * @param {Object} user\n     */\n    async showUser(user) {\n        const [{html, js}, hasGrade] = await Promise.all([this.renderUserChange(user), this.showUserCallback(user)]);\n        const userRegion = this.root.querySelector(Selectors.regions.userRegion);\n        Templates.replaceNodeContents(userRegion, html, js);\n\n        // TODO: plumb in and tidy up with MDL-66893.\n        Templates.appendNodeContents(userRegion, `<h5>learner has grade: ${hasGrade}</h5>`, '');\n    }\n\n    /**\n     * Register the event listeners for the user picker.\n     */\n    registerEventListeners() {\n        this.root.addEventListener('click', async(e) => {\n            const button = e.target.closest(Selectors.actions.changeUser);\n            const input = e.target.closest(Selectors.actions.searchUserInput);\n\n            if (button) {\n                const result = await this.preChangeUserCallback(this.currentUser);\n\n                if (!result.failed) {\n                    this.updateIndex(parseInt(button.dataset.direction));\n                    await this.showUser(this.currentUser);\n                }\n            }\n            if (input) {\n\n                // Make the key up a seperate function.\n                this.onKeyUp(input);\n            }\n        });\n    }\n\n    /**\n     * Listener for keyboard entry that'll search the user list for matching users.\n     *\n     * @param {Text} input User entered text of the user to search for.\n     */\n    onKeyUp(input) {\n        // Init a timeout variable to be used below\n        let timeout = null;\n        // Listen for keystroke events\n        input.onkeyup = () => {\n            // Clear the timeout if it has already been set.\n            clearTimeout(timeout);\n            // Make a new timeout set to go off in 300ms\n            timeout = setTimeout(async(userList) => {\n                const userInput = input.value;\n                const results = userList.filter((user) => {\n                    return user.fullname.toLowerCase().includes(userInput.toLowerCase());\n                });\n                await this.renderSearch(results);\n                this.searchResultListener();\n            }, 300, this.userList);\n        };\n    }\n\n    /**\n     * Apply the click handler for the users found in the user search area.\n     */\n    searchResultListener() {\n        this.root.querySelector(Selectors.actions.searchUserBox).addEventListener('click', async(e) => {\n            e.preventDefault();\n            const user = e.target.closest(Selectors.actions.selectUser);\n            if (user !== null) {\n                const foundUser = this.userList.findIndex(item => parseInt(item.id) === parseInt(user.dataset.userid));\n                const result = await this.preChangeUserCallback(this.currentUser);\n\n                if (!result.failed) {\n                    this.updateIndex(0, parseInt(foundUser));\n                    await this.showUser(this.currentUser);\n                }\n            }\n        });\n    }\n\n    /**\n     * Render the user search results.\n     *\n     * @param {Array} results List of users\n     */\n    async renderSearch(results) {\n        const trimmedUsers = results.slice(0, 10);\n        const overflowUsers = results.slice(10);\n        const builtResults = {\n          'expandedUsers': trimmedUsers,\n          'hasCollapsed': overflowUsers.length > 0,\n          'collapsedUsers': overflowUsers,\n        };\n        const {html, js} = await Templates.renderForPromise(`${templatePath}/user_picker/user_search`, builtResults);\n        const searchUserRegion = this.root.querySelector(Selectors.actions.searchUserBox);\n        Templates.replaceNode(searchUserRegion, html, js);\n    }\n    /**\n     * Update the current user index.\n     *\n     * @param {Number} direction\n     * @param {Number} specificIndex\n     * @returns {Number}}\n     */\n    updateIndex(direction, specificIndex = null) {\n        if (specificIndex) {\n            this.currentUserIndex = specificIndex;\n        } else {\n            this.currentUserIndex += direction;\n        }\n\n        // Loop around the edges.\n        if (this.currentUserIndex < 0) {\n            this.currentUserIndex = this.userList.length - 1;\n        } else if (this.currentUserIndex > this.userList.length - 1) {\n            this.currentUserIndex = 0;\n        }\n\n        return this.currentUserIndex;\n    }\n\n    /**\n     * Get the details of the user currently shown with the total number of users, and the 1-indexed count of the\n     * current user.\n     *\n     * @returns {Object}\n     */\n    get currentUser() {\n        return {\n            ...this.userList[this.currentUserIndex],\n            total: this.userList.length,\n            displayIndex: this.currentUserIndex + 1,\n        };\n    }\n\n    /**\n     * Get the root node for the User Picker.\n     *\n     * @returns {HTMLElement}\n     */\n    get rootNode() {\n        return this.root;\n    }\n}\n\n/**\n * Create a new user picker.\n *\n * @param {Array} users The list of users\n * @param {Function} showUserCallback The function to call to show a specific user\n * @param {Function} preChangeUserCallback The fucntion to call to save the grade for the current user\n * @param {Number} [currentUserID] The userid of the current user\n * @returns {UserPicker}\n */\nexport default async(\n    users,\n    showUserCallback,\n    preChangeUserCallback,\n    {\n        initialUserId = null,\n    } = {}\n) => {\n    const userPicker = new UserPicker(users, showUserCallback, preChangeUserCallback);\n    if (initialUserId) {\n        userPicker.setUserId(initialUserId);\n    }\n    await userPicker.render();\n\n    return userPicker;\n};\n"],"file":"user_picker.min.js"}