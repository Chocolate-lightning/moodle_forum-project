{"version":3,"sources":["../../../src/local/layout/fullscreen.js"],"names":["getLayoutHelpers","layoutNode","exitFullscreen","document","exitRequestFullScreen","fullScreenElement","msExitFullscreen","msFullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitFullscreenElement","close","remove","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setTop","getContainer","getComposedLayout","fullscreen","container","createElement","body","append","classList","add","setAttribute","helpers"],"mappings":"qKA0CMA,CAAAA,CAAgB,CAAG,SAACC,CAAD,CAAgB,IAgC/BC,CAAAA,CAAc,CAAG,UAAM,CACzB,GAAIC,QAAQ,CAACC,qBAAb,CAAoC,CAChC,GAAID,QAAQ,CAACE,iBAAT,GAA+BJ,CAAnC,CAA+C,CAC3C,MACH,CACDE,QAAQ,CAACC,qBAAT,EACH,CALD,IAKO,IAAID,QAAQ,CAACG,gBAAb,CAA+B,CAClC,GAAIH,QAAQ,CAACI,mBAAT,GAAiCN,CAArC,CAAiD,CAC7C,MACH,CACDE,QAAQ,CAACG,gBAAT,EACH,CALM,IAKA,IAAIH,QAAQ,CAACK,mBAAb,CAAkC,CACrC,GAAIL,QAAQ,CAACM,oBAAT,GAAkCR,CAAtC,CAAkD,CAC9C,MACH,CACDE,QAAQ,CAACK,mBAAT,EACH,CALM,IAKA,IAAIL,QAAQ,CAACO,oBAAb,CAAmC,CACtC,GAAIP,QAAQ,CAACQ,uBAAT,GAAqCV,CAAzC,CAAqD,CACjD,MACH,CACDE,QAAQ,CAACO,oBAAT,EACH,CACJ,CAtDoC,CAoErC,MAAO,CACHE,KAAK,CAjEK,QAARA,CAAAA,KAAQ,EAAM,CAChBV,CAAc,GAEdD,CAAU,CAACY,MAAX,EACH,CA4DM,CAEHC,iBAAiB,CAzDK,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,GAAIb,CAAU,CAACa,iBAAf,CAAkC,CAC9Bb,CAAU,CAACa,iBAAX,EACH,CAFD,IAEO,IAAIb,CAAU,CAACc,mBAAf,CAAoC,CACvCd,CAAU,CAACc,mBAAX,EACH,CAFM,IAEA,IAAId,CAAU,CAACe,oBAAf,CAAqC,CACxCf,CAAU,CAACe,oBAAX,EACH,CAFM,IAEA,IAAIf,CAAU,CAACgB,uBAAf,CAAwC,CAC3ChB,CAAU,CAACgB,uBAAX,EACH,CAFM,IAEA,CAGHhB,CAAU,CAACiB,MAAX,CAAkB,CAAlB,CACH,CACJ,CAyCM,CAGHhB,cAAc,CAAdA,CAHG,CAIHiB,YAAY,CAXK,QAAfA,CAAAA,YAAe,EAAM,CACvB,MAAOlB,CAAAA,CACV,CAKM,CAMV,C,0BAzFyB,QAApBmB,CAAAA,iBAAoB,EAA8B,8DAAP,EAAO,KAA5BC,UAA4B,CAA5BA,CAA4B,iBAC9CC,CAAS,CAAGnB,QAAQ,CAACoB,aAAT,CAAuB,KAAvB,CADkC,CAEpDpB,QAAQ,CAACqB,IAAT,CAAcC,MAAd,CAAqBH,CAArB,EACAA,CAAS,CAACI,SAAV,CAAoBC,GAApB,CAAwB,QAAxB,EACAL,CAAS,CAACI,SAAV,CAAoBC,GAApB,CAAwB,YAAxB,EACAL,CAAS,CAACM,YAAV,CAAuB,WAAvB,CAAoC,aAApC,EAEA,GAAMC,CAAAA,CAAO,CAAG7B,CAAgB,CAACsB,CAAD,CAAhC,CACA,GAAID,CAAJ,CAAgB,CACZQ,CAAO,CAACf,iBAAR,EACH,CAED,MAAOe,CAAAA,CACV,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Full screen window layout.\n *\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @param {string} templateName\n * @param {object} context\n * @return {object}\n */\nconst getComposedLayout = ({fullscreen = true} = {}) => {\n    const container = document.createElement('div');\n    document.body.append(container);\n    container.classList.add('layout');\n    container.classList.add('fullscreen');\n    container.setAttribute('aria-role', 'application');\n\n    const helpers = getLayoutHelpers(container);\n    if (fullscreen) {\n        helpers.requestFullscreen();\n    }\n\n    return helpers;\n};\n\nconst getLayoutHelpers = (layoutNode) => {\n    /**\n     * Close and destroy the window container.\n     */\n    const close = () => {\n        exitFullscreen();\n\n        layoutNode.remove();\n    };\n\n    /**\n     * Attempt to make the conatiner full screen.\n     */\n    const requestFullscreen = () => {\n        if (layoutNode.requestFullscreen) {\n            layoutNode.requestFullscreen();\n        } else if (layoutNode.msRequestFullscreen) {\n            layoutNode.msRequestFullscreen();\n        } else if (layoutNode.mozRequestFullscreen) {\n            layoutNode.mozRequestFullscreen();\n        } else if (layoutNode.webkitRequestFullscreen) {\n            layoutNode.webkitRequestFullscreen();\n        } else {\n            // Not supported.\n            // Hack to make this act like full-screen as much as possible.\n            layoutNode.setTop(0);\n        }\n    };\n\n    /**\n     * Exit full screen but do not close the container fully.\n     */\n    const exitFullscreen = () => {\n        if (document.exitRequestFullScreen) {\n            if (document.fullScreenElement !== layoutNode) {\n                return;\n            }\n            document.exitRequestFullScreen();\n        } else if (document.msExitFullscreen) {\n            if (document.msFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            if (document.mozFullScreenElement !== layoutNode) {\n                return;\n            }\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            if (document.webkitFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.webkitExitFullscreen();\n        }\n    };\n\n    /**\n     * Get the Node which is fullscreen.\n     *\n     * @return {Element}\n     */\n    const getContainer = () => {\n        return layoutNode;\n    };\n\n    /**\n     * @return {Object}\n     */\n    return {\n        close,\n        requestFullscreen,\n        exitFullscreen,\n        getContainer,\n    };\n};\n\nexport const createFullScreenWindow = getComposedLayout;\n"],"file":"fullscreen.min.js"}